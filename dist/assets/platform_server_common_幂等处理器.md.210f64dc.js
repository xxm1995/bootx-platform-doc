import{_ as s,o as a,c as o,X as n}from"./chunks/framework.6909765d.js";const C=JSON.parse('{"title":"幂等处理器","description":"","frontmatter":{},"headers":[],"relativePath":"platform/server/common/幂等处理器.md","filePath":"platform/server/common/幂等处理器.md"}'),e={name:"platform/server/common/幂等处理器.md"},l=n(`<h1 id="幂等处理器" tabindex="-1">幂等处理器 <a class="header-anchor" href="#幂等处理器">¶</a></h1><h2 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明">¶</a></h2><p>在要进行幂等控制的方法上添加 <code>@Idempotent</code> 注解，当该方法方法上重复提交时进行拦截。原理是通过创建一个<code>AOP</code>切面，在切面中拦截添加 <code>@Idempotent</code> 注解的方法， 同时获取当前请求的请求头中的 <code>IdempotentToken</code> 数据，通过<code>redis</code>的<code>setIfAbsent</code>命令判断是否已经存在，存的的话抛出异常。推荐在<code>Controller</code>中的方法上使用， 在非Web环境或者异步方法中无效。</p><p>幂等控制需要前端进行配合，前端在发送请求时，在请求头或者<code>QueryString</code>参数里里放入 <code>IdempotentToken</code>(幂等令牌) 数据。 通常在是在前端页面生命周期中创建页面时生成一个<code>Token</code>，放入到这个页面所发出请求的请求头中或请求参数上，当重复发送请求时会被后端拦截该请求，并返回错误提示。</p><blockquote><p>注意：幂等请求的字段名为: <code>IdempotentToken</code></p></blockquote><h2 id="注解" tabindex="-1">注解 <a class="header-anchor" href="#注解">¶</a></h2><p><code>@Idempotent</code>:</p><ul><li><code>enable</code>是否开启幂等控制</li><li><code>required</code> 是否必须携带幂等<code>token</code>, 不携带直接不允许访问，并抛出错误</li><li><code>timeout</code>超时时间(毫秒)</li><li><code>name</code>名称，用来区分同一个前端页面发出的不同请求方法(同一页面发送的请求带的Token可能会是重复的)</li><li><code>key</code> key, 用于区分不同请求，支持EL表达式从参数中取值（开发中）</li><li><code>message</code> 幂等异常提示消息</li></ul><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用">¶</a></h2><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Slf4j</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Tag</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">name</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">测试控制器</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RestController</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequestMapping</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/test</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequiredArgsConstructor</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TestController</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 添加幂等拦截注解</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Idempotent</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Operation</span><span style="color:#89DDFF;">(</span><span style="color:#FFCB6B;">summary</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">测试</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">GetMapping</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">ResResult</span><span style="color:#89DDFF;">&lt;</span><span style="color:#C792EA;">String</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">hello</span><span style="color:#89DDFF;">(){</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> Res</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">ok</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hello</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="关键类" tabindex="-1">关键类 <a class="header-anchor" href="#关键类">¶</a></h2><ul><li><code>IdempotentAop</code> 幂等处理器切面</li></ul>`,12),p=[l];function t(c,r,D,F,y,d){return a(),o("div",null,p)}const A=s(e,[["render",t]]);export{C as __pageData,A as default};
