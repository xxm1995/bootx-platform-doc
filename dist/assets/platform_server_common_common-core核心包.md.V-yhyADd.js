import{_ as i,c as s,o as e,V as a}from"./chunks/framework.TiLr8DIm.js";const g=JSON.parse('{"title":"common-core核心包","description":"","frontmatter":{},"headers":[],"relativePath":"platform/server/common/common-core核心包.md","filePath":"platform/server/common/common-core核心包.md","lastUpdated":1705250100000}'),l={name:"platform/server/common/common-core核心包.md"},t=a(`<h1 id="common-core核心包" tabindex="-1">common-core核心包 <a class="header-anchor" href="#common-core核心包">¶</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>包含项目执行时必须的一系列注解、枚举、基础类、基础接口、基础异常等相关对象定义，是系统开发和运行必不可少的一个模块。</p></div><h2 id="注解" tabindex="-1">注解 <a class="header-anchor" href="#注解">¶</a></h2><ul><li><code>BigField</code> 数据库大字段标识注解，详细使用见<a href="./MyBatis-Plus扩展.html">MyBatis-Plus扩展模块</a></li><li><code>CountTime</code> 获取方法执行的时间</li><li><code>DataVersionLog</code> 数据版本日志注解，添加到要记录版本数据的数据库实体类上，详细使用见<a href="/platform/server/starter/审计日志.html">审计日志模块</a></li><li><code>Idempotent</code> 幂等性拦截注解，用于拦截前端重复提交的请求，详细见<a href="./幂等处理器.html">幂等处理器模块</a></li><li><code>IgnoreAuth</code> 忽略鉴权注解，可以加在<code>Controller</code>的方法或类上，访问时不在进行鉴权，加在非<code>Controller</code>的地方无效，详细使用见<a href="/platform/server/starter/登录鉴权.html">登录鉴权模块</a></li><li><code>JobLog</code> 定时任务日志记录注解，控制是该定时方法是否需要记录日志，详细使用见<a href="/platform/server/starter/Quartz定时任务.html">Quartz定时任务模块</a></li><li><code>NestedPermission</code> 嵌套权限控制注解，需要配合Permission注解一起使用，主要用来解决在<code>@Permission</code>声明的方法调用其他子方法时， 忽略子方法执行时的数据权限拦截，详细使用见<a href="/platform/server/starter/数据权限.html">数据权限模块</a></li><li><code>OperateLog</code> 操作日志记录注解，<code>AOP</code>处理类自动拦截，记录对应的操作行为，可以进行重复的标注，详细使用见<a href="/platform/server/starter/审计日志.html">审计日志模块</a></li><li><code>PermCode</code> 权限码鉴权注解, 用在Controller及对应的请求方法上时，可以通过用户是否拥有该请求路径的权限码，来决定是否可以通行本次请求, 2.放在数据库实体类及字段上时，会在启用查询字段权限的时候，对用户没有权限码的字段不进行SQL查询</li><li><code>Permission</code> 权限控制注解，可以添加到方法和类上，添加后所执行的SQL会进行数据权限相关的控制，详细使用见<a href="/platform/server/starter/数据权限.html">数据权限模块</a></li><li><code>QueryParam</code> 查询参数构造注解，通过标注在实体类，可以让实体类转换成<code>MyBatis-Plus</code>的<code>QueryWrapper</code>查询构造器，详细使用见<a href="./查询构造器.html">超级查询器模块</a></li><li></li></ul><h2 id="常量枚举类" tabindex="-1">常量枚举类 <a class="header-anchor" href="#常量枚举类">¶</a></h2><ul><li><code>CommonCode</code> 公共常量，包括公共字段名称、删除标记字段名一类的常量</li><li><code>CommonErrorCode</code> 公用错误码常量</li><li><code>ServletCode</code> Servlet常量</li><li><code>WebHeaderConst</code> web请求头常量</li></ul><h2 id="基础类" tabindex="-1">基础类 <a class="header-anchor" href="#基础类">¶</a></h2><ul><li><code>UserDetail</code> 用户类，只包含id、name，username三个核心属性，是<code>SecurityUtil</code>工具类返回的对象，如需要获取更详细的用户信息，需要自行查询</li><li><code>BaseDto</code> 基础Dto类，包含主键，创建时间，最后修改时间，版本号四个属性</li><li><code>KeyValue</code> key/value键值对象</li><li><code>LabelValue</code> 通常用于返回给前台用来展示下拉列表的数据结构</li><li><code>OrderParam</code> 排序参数</li><li><code>PageParam</code> 分页查询参数</li><li><code>ErrorResult</code> 错误响应类，业务出现异常后返回的响应类，携带链路追踪ID <code>trackId</code>，可以用于追踪整个错误的请求链路，详见<a href="./日志扩展.html#链路追踪">日志扩展模块</a></li><li><code>ResResult</code> 正常响应类,用于进行响应值的返回</li><li><code>PageResult</code> 分页响应类,用于响应分页数据</li><li><code>Res</code> 返回工具类，可以快捷构造各种正常响应类</li></ul><h2 id="基础接口" tabindex="-1">基础接口 <a class="header-anchor" href="#基础接口">¶</a></h2><ul><li><code>EntityBaseFunction</code> 数据库entity基础声明方法，实现该接口将会有一个转换成Dto的方法</li><li><code>ParamService</code> 参数获取服务(必须要有实现类，并注入到Spring容器中)，见基础服务模块中的<a href="/platform/server/service/baseapi/参数配置.html">参数配置</a></li><li><code>SystemKeyValueService</code> key/value键值对象读写接口服务(必须要有实现类，并注入到Spring容器中)，见<a href="/platform/server/service/baseapi/键值对存储.html">基础服务模块</a></li><li><code>UserDetailService</code> 用户信息接口服务(必须要有实现类，并注入到Spring容器中)，用来进行一些用户信息的公共查询操作，主要用在不能依赖<code>身份识别与访问管理（IAM）</code>的模块</li></ul><h2 id="公共异常" tabindex="-1">公共异常 <a class="header-anchor" href="#公共异常">¶</a></h2><ul><li><code>BizException</code> 业务异常基类，常见的业务异常可以继承它</li><li><code>DataNotExistException</code> 数据不存在异常</li><li><code>ErrorCodeRuntimeException</code> 错误码异常基类</li><li><code>FatalException</code> 致命异常基类，出现此异常意味着程序遇到了致命错误，无法继续执行下去，业务流程被中断</li><li><code>OptimisticLockException</code> 乐观锁异常</li><li><code>RepetitiveOperationException</code> 重复操作异常，常见于幂等控制</li><li><code>SystemException</code> 系统类异常基类，出现此异常说明系统遇到了问题</li><li><code>BizException</code> 业务异常基类，出现此异常说明业务出现异常，但不是致命异常，还可以继续进行运行</li><li><code>UnSupportOperateException</code> 不支持的操作异常</li><li><code>UnSupportReadException</code> 不支持的读取操作</li><li><code>ValidationFailedException</code> 参数验证失败异常，作为的<code>BizException</code>异常的子类</li></ul><h2 id="基础工具类" tabindex="-1">基础工具类 <a class="header-anchor" href="#基础工具类">¶</a></h2><ul><li><code>BigDecimalUtil</code> 大数工具类，处理<code>BigDecimal</code>类型的简单加减乘除等操作</li><li><code>CertUtil</code> 证书工具类, 用户获取证书信息等操作</li><li><code>CollUtil</code> 集合工具类，扩展自<code>hutool</code>的工具类</li><li><code>FileUtil</code> 文件操作工具类，扩展自<code>hutool</code>的工具类</li><li><code>LocalDateTimeUtil</code> <code>JDK8</code>时间工具类，扩展自<code>hutool</code>的工具类</li><li><code>RegexUtil</code> 正则验证工具类，提供一些默认的校验方法，例如校验邮箱号、手机号等</li><li><code>ResultConvertUtil</code> 结果转换工具类工具类，主要用于<code>Dto</code>与<code>Entity</code>之间的转换</li><li><code>SqlInjectionUtil</code> sql注入处理工具类</li><li><code>TreeBuildUtil</code> 构建数据树工具类，见<a href="#TreeBuildUtil使用说明">TreeBuildUtil使用说明</a></li><li><code>ValidationUtil</code> 属性校验工具类</li></ul><h2 id="枚举和其他" tabindex="-1">枚举和其他 <a class="header-anchor" href="#枚举和其他">¶</a></h2><ul><li><code>ValidationGroup</code> 校验分组标记，提供了增加(add)、编辑(edit)、删除(delete)、查询(query)四种常见场合的分组类标识</li></ul><h2 id="treebuildutil使用说明" tabindex="-1">TreeBuildUtil使用说明 <a class="header-anchor" href="#treebuildutil使用说明">¶</a></h2><blockquote><p>功能是将一个<code>List</code>列表类型的数据，转换成树状列表的结果</p></blockquote><h3 id="对象结构要求" tabindex="-1">对象结构要求 <a class="header-anchor" href="#对象结构要求">¶</a></h3><p>需要有主键（id）、关联父类的主键（pid）、包含叶子节点的列表（Children），这三个字段是必须存在的，举个栗子：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> RegionDto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Schema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">description</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;主键编码&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Integer id;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">     @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Schema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">description</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;上级行政区域id&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Integer pid;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Schema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">description</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;名称&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String name;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Schema</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">description</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;下一级行政区域&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> List&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RegionDto</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; children;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="参数说明" tabindex="-1">参数说明 <a class="header-anchor" href="#参数说明">¶</a></h3><ul><li><code>list</code> 要进行转换的列表</li><li><code>pid</code> 一级节点的父级id，通常为null</li><li><code>getId</code> 获取主键的方法方法引用</li><li><code>getPid</code> 获取关联父级节点主键的方法引用</li><li><code>setChildren</code> 设置子节点列表的方法引用</li><li><code>comparator</code> 节点顺序的排序规则</li></ul><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例">¶</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 递归建树</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> permissions</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 查询出的菜单数据</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 递归后的树列表</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> List</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PermMenuDto</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> recursiveBuildTree</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(List</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PermMenuDto</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> permissions) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TreeBuildUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">build</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(permissions, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, BaseDto</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">getId,PermMenuDto</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">getParentId,PermMenuDto</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">setChildren,Comparator.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">comparingDouble</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(PermMenuDto</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">getSortNo));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="主要依赖" tabindex="-1">主要依赖 <a class="header-anchor" href="#主要依赖">¶</a></h2><ul><li><code>lombok</code> 私有依赖,用于简化一系列java代码的写法</li><li><code>commons-lang3</code></li><li><code>jackson-databind</code> <code>jackson</code>数据绑定</li><li><code>commons-collections4</code></li><li><code>commons-text</code></li><li><code>commons-codec</code></li><li><code>commons-io</code></li><li><code>guava</code> Google 出的 Guava 是Java 核心增强的库,应用非常广泛。</li><li><code>hutool</code> 国产工具类</li><li><code>hibernate-validator</code> 属性校验</li><li><code>javax.servlet-api</code></li><li><code>swagger-annotations</code> <code>swagger3</code> 注解依赖</li><li><code>springdoc-openapi-common</code> <code>swagger3</code> 的实现<code>springdoc</code>框架，引入这个包是为了引入相关依赖</li><li><code>slf4j-api</code> 日志门面</li></ul>`,27),o=[t];function n(d,h,c,r,p,k){return e(),s("div",null,o)}const m=i(l,[["render",n]]);export{g as __pageData,m as default};
