import{_ as s,c as a,o as i,V as n}from"./chunks/framework.OTU5OxHT.js";const E=JSON.parse('{"title":"项目后端部署","description":"","frontmatter":{},"headers":[],"relativePath":"platform/overview/config/后端部署.md","filePath":"platform/overview/config/后端部署.md","lastUpdated":1707297965000}'),e={name:"platform/overview/config/后端部署.md"},t=n(`<h1 id="项目后端部署" tabindex="-1">项目后端部署 <a class="header-anchor" href="#项目后端部署">¶</a></h1><h2 id="项目构建" tabindex="-1">项目构建 <a class="header-anchor" href="#项目构建">¶</a></h2><p>首先在项目中执行<code>mvn -B clean package -Dmaven.test.skip=true -Dmaven.javadoc.skip=true -Dautoconfig.skip</code>命令进行构建，<code>-Dmaven.javadoc.skip=true</code>是跳过DOC文档相关的构造， 可以加快构建的速度。构建执行完成后，到项目下<code>bootx-start</code>模块下的<code>target</code>目录中找到<code>bootx-start.jar</code>文件，这个文件就是我们所需要的可执行Jar包</p><h2 id="jar包方式部署" tabindex="-1">jar包方式部署 <a class="header-anchor" href="#jar包方式部署">¶</a></h2><ol><li>在主机中安装jdk</li><li>将构建出的Jar上传到主机上，然后执行 <code>java -jar bootx-start.jar</code></li></ol><h2 id="docker部署" tabindex="-1">docker部署 <a class="header-anchor" href="#docker部署">¶</a></h2><blockquote><p>默认项目中已经提供已经编写好的<code>Dockerfile</code>，可以直接根据这个配置文件进行构建Docker镜像，推荐启动时使用<code>Docker-Compose</code>，方便进行进行管理，</p></blockquote><p><strong>启动命令</strong></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run -p </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9999</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:9999 bootx-start</span></span></code></pre></div><p><strong>Dockerfile文件</strong></p><div class="language-dockerfile vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># java8基础镜像</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">FROM</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> registry.cn-beijing.aliyuncs.com/xxm1995/java8</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 作者信息</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MAINTAINER</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bootx</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 时区设置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ENV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> TZ=Asia/Shanghai</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RUN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ln -sf /usr/share/zoneinfo/$TZ /etc/localtime &amp;&amp; echo $TZ &gt; /etc/timezone</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 启动命令</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ENV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JAVA_COMM=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;-Djava.security.egd=file:/dev/./urandom -Dfile.encoding=UTF-8&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 启动选项配置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ENV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JAVA_OPTS=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Agent配置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ENV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JAVA_AGENT=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 参数配置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ENV</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JAVA_ARGS=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 工作目录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WORKDIR</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 端口暴露</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">EXPOSE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> 9999</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 添加执行jar包</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ADD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> bootx-start/target/bootx-start.jar bootx-start.jar</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 执行启动命令</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">CMD</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> java -jar $JAVA_OPTS $JAVA_AGENT $JAVA_COMM bootx-start.jar $JAVA_ARGS</span></span></code></pre></div><h2 id="docker-compose部署" tabindex="-1">docker-compose部署 <a class="header-anchor" href="#docker-compose部署">¶</a></h2><blockquote><p>编写中.....</p></blockquote><h2 id="kubernetes部署" tabindex="-1">kubernetes部署 <a class="header-anchor" href="#kubernetes部署">¶</a></h2><blockquote><p>编写中.....</p></blockquote>`,15),l=[t];function p(h,k,o,r,c,d){return i(),a("div",null,l)}const A=s(e,[["render",p]]);export{E as __pageData,A as default};
