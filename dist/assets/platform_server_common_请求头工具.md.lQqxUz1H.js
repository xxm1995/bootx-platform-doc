import{_ as e,c as a,o,V as r}from"./chunks/framework.cllxpRy7.js";const f=JSON.parse('{"title":"请求头工具","description":"","frontmatter":{},"headers":[],"relativePath":"platform/server/common/请求头工具.md","filePath":"platform/server/common/请求头工具.md","lastUpdated":1691047307000}'),t={name:"platform/server/common/请求头工具.md"},d=r('<h1 id="请求头工具" tabindex="-1">请求头工具 <a class="header-anchor" href="#请求头工具">¶</a></h1><h2 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明">¶</a></h2><p>用来获取请求头中的数据，并且在异步方法中也可以正常获取。 原理是通过创建一个web过滤器，每次请求到来时，获取请求头的所有请求头数据存储到TTL容器（<code>TransmittableThreadLocal</code>）缓存里里， 存储到TTL容器是为了在异步或者多线程代码中不丢失请求头数据，请求结束后自动清除数据。</p><h2 id="关键类" tabindex="-1">关键类 <a class="header-anchor" href="#关键类">¶</a></h2><ul><li><code>HeaderHolder</code> 请求头获取工具类，用于调用获取请求头信息</li><li><code>HolderContextHolder</code> 请求头上下文<code>TTL</code>存储类</li><li><code>WebHeaderHolderInterceptor</code> web请求头过滤器</li></ul>',5),c=[d];function s(_,l,n,i,h,m){return o(),a("div",null,c)}const T=e(t,[["render",s]]);export{f as __pageData,T as default};
