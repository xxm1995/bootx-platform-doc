import{_ as s,o as a,c as n,X as l}from"./chunks/framework.6909765d.js";const p="/assets/1.67249a70.png",d=JSON.parse('{"title":"定时任务","description":"","frontmatter":{},"headers":[],"relativePath":"platform/server/starter/Quartz定时任务.md","filePath":"platform/server/starter/Quartz定时任务.md"}'),o={name:"platform/server/starter/Quartz定时任务.md"},e=l('<h1 id="定时任务" tabindex="-1">定时任务 <a class="header-anchor" href="#定时任务">¶</a></h1><h2 id="功能" tabindex="-1">功能 <a class="header-anchor" href="#功能">¶</a></h2><ul><li>封装Quartz定时任务，可以通过web界面来控制执行</li><li>通过标注注解来进行自动记录执行日志</li></ul><h2 id="截图" tabindex="-1">截图 <a class="header-anchor" href="#截图">¶</a></h2><p><img src="'+p+`" alt="img.png"></p><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用">¶</a></h2><p>自定义<code>Job</code>任务类，然后在Web管理页面上添加该任务并启动。</p><blockquote><p><code>Job</code>任务类可以正常注入Spring Bean对象，Quartz具体使用查看官方教程</p></blockquote><div class="language-java"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">/**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * 测试定时任务</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * </span><span style="color:#F78C6C;font-style:italic;">@author</span><span style="color:#676E95;font-style:italic;"> xxm</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> * @date 2021/11/8 </span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"> */</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Slf4j</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Component</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">DisallowConcurrentExecution</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">PersistJobDataAfterExecution</span></span>
<span class="line"><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">RequiredArgsConstructor</span></span>
<span class="line"><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">class</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">TestTask</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">implements</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">Job</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">    /**</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     * 若参数变量名修改 QuartzJobScheduler 中也需对应修改</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     * 需要给一个set方法, 让系统设置值</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;">     */</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Setter</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">private</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">String</span><span style="color:#A6ACCD;"> parameter</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">@</span><span style="color:#C792EA;">Override</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#C792EA;">public</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">void</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">execute</span><span style="color:#89DDFF;">(</span><span style="color:#C792EA;">JobExecutionContext</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">context</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">        log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">定时任务start</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        ThreadUtil</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">safeSleep</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">5000L</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">定时任务end</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">        log</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">info</span><span style="color:#89DDFF;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">参数: {}</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;">parameter</span><span style="color:#89DDFF;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><p><strong>配置文件</strong></p><div class="language-yaml"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F07178;">quartz</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;"># 持久化方式</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">job-store-type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">jdbc</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">#定时任务启动开关，true-开  false-关</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">auto-startup</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">#启动时更新己存在的Job</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">overwrite-existing-jobs</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">properties</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">org</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">      </span><span style="color:#F07178;">quartz</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">      	</span><span style="color:#676E95;font-style:italic;"># 执行器</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">scheduler</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;"># 执行器名称</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">instanceName</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">quartzScheduler</span></span>
<span class="line"><span style="color:#89DDFF;">          </span><span style="color:#676E95;font-style:italic;"># id配置</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">instanceId</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">AUTO</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#676E95;font-style:italic;"># 线程池</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F07178;">threadPool</span><span style="color:#89DDFF;">:</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">threadCount</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">10</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">threadPriority</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">5</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F07178;">threadsInheritContextClassLoaderOfInitializingThread</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span></code></pre></div><h2 id="记录日志" tabindex="-1">记录日志 <a class="header-anchor" href="#记录日志">¶</a></h2><p>在定时任务的执行类上标注<code>JobLog</code>注解，就可以开启自动保存执行日志的功能，将会记录下定时任务执行时的信息，其中有两个参数可以配置：</p><ul><li><code>log</code> 是否记录正常日志，默认为<code>true</code></li><li><code>errorLog</code> 是否记录异常日志，默认为<code>true</code></li></ul><h2 id="相关类" tabindex="-1">相关类 <a class="header-anchor" href="#相关类">¶</a></h2><ul><li><code>QuartzJobScheduler</code> 定时任务调度器</li><li><code>JobLogAspectHandler</code> 定时任务日志切面</li></ul>`,16),t=[e];function c(r,y,i,D,F,C){return a(),n("div",null,t)}const u=s(o,[["render",c]]);export{d as __pageData,u as default};
