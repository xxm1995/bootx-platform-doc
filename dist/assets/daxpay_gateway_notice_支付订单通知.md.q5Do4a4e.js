import{_ as t,c as s,o as i,V as a}from"./chunks/framework.OTU5OxHT.js";const g=JSON.parse('{"title":"支付订单通知","description":"","frontmatter":{},"headers":[],"relativePath":"daxpay/gateway/notice/支付订单通知.md","filePath":"daxpay/gateway/notice/支付订单通知.md","lastUpdated":1708656409000}'),d={name:"daxpay/gateway/notice/支付订单通知.md"},n=a(`<h1 id="支付订单通知" tabindex="-1">支付订单通知 <a class="header-anchor" href="#支付订单通知">¶</a></h1><h2 id="通知方式" tabindex="-1">通知方式 <a class="header-anchor" href="#通知方式">¶</a></h2><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>请求方式</td><td><code>POST</code></td></tr><tr><td>请求类型</td><td><code>application/json</code></td></tr><tr><td>客户系统应答值</td><td>大写 <code>SUCCESS</code> 字符串</td></tr></tbody></table><h2 id="通知规则" tabindex="-1">通知规则 <a class="header-anchor" href="#通知规则">¶</a></h2><p>当满足下列通知时机时，系统会将支付订单状态变化通知到商户的接收地址上。商户需要接收处理该消息并返回应答。</p><p>如果收到客户系统的应答不符合规范或超时，支付网关会认为通知失败，并通过一定的策略定期重新发起通知，尽可能提高通知的成功率，但微信不保证通知最终能成功。 （通知频率为<code>15s/15s/30s/3m/10m/20m/30m/30m/30m/60m/3h/3h/3h/6h/6h</code>- 总计 24h4m）</p><h2 id="通知时机" tabindex="-1">通知时机 <a class="header-anchor" href="#通知时机">¶</a></h2><blockquote><p>当支付订单状态发生变化时，系统会主动将支付订单状态变化通知到商户的接收地址上。<strong>注意：调用接口发起支付时，出现的支付失败也不会触发通知，因为当前订单状态不会发生变化，依然是支付中</strong></p></blockquote><table><thead><tr><th>支付状态</th><th>描述</th><th>是否通知</th></tr></thead><tbody><tr><td>支付创建</td><td>创建支付单或者通过修复从其他状态变更为支付中，不会推送通知</td><td>否</td></tr><tr><td>支付成功</td><td>支付完成后会推送通知</td><td>是</td></tr><tr><td>支付失败</td><td>在存在异步通道情况下，三方网关回调通知支付失败，会推送通知</td><td>是</td></tr><tr><td>支付关闭</td><td>当支付单被关闭时，会推送通知</td><td>是</td></tr><tr><td>退款中</td><td>会在对应的退款单发起通知</td><td>否</td></tr><tr><td>部分退款</td><td>会在对应的退款单发起通知</td><td>否</td></tr><tr><td>全部退款</td><td>会在对应的退款单发起通知</td><td>否</td></tr></tbody></table><h2 id="注意事项" tabindex="-1">注意事项 <a class="header-anchor" href="#注意事项">¶</a></h2><ol><li>回调地址必须可被支付网关访问</li><li>回调地址仅支持http与https协议</li><li>如果文档开启验签，参照<a href="./../overview/签名规则.html">签名规则</a>文档进行验签</li></ol><h2 id="通知参数" tabindex="-1">通知参数 <a class="header-anchor" href="#通知参数">¶</a></h2><table><thead><tr><th>字段名<img width="70/"></th><th>变量名</th><th>必传</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td>支付ID</td><td>paymentId</td><td>是</td><td>Long</td><td>1753370980523384832</td><td>这次支付单的唯一标示</td></tr><tr><td>业务号</td><td>businessNo</td><td>是</td><td>String</td><td>P0001</td><td>支付时客户系统传输的业务编码</td></tr><tr><td>是否是异步支付</td><td>asyncPay</td><td>是</td><td>boolean</td><td>true</td><td>本次支付中是否存在异步支付通道</td></tr><tr><td>异步支付通道</td><td>asyncChannel</td><td>否</td><td>String</td><td>ali_pay</td><td>支付的通道编码，如微信支付、支付宝支付等。见常量和状态表<a href="/daxpay/guides/other/常量和状态表.html#支付通道-paychannelenum">PayChannelEnum</a>相关的描述</td></tr><tr><td>支付金额</td><td>amount</td><td>是</td><td>Integer</td><td>18</td><td>支付的金额，单位为<strong>分</strong></td></tr><tr><td>支付通道信息</td><td>payChannels</td><td>是</td><td>PayChannelResult[]</td><td>略</td><td>见下方<code>PayChannelResult</code>参数介绍</td></tr><tr><td>支付状态</td><td>status</td><td>是</td><td>String</td><td>success</td><td>见常量和状态表<a href="/daxpay/guides/other/常量和状态表.html#支付状态-paystatusenum">PayStatusEnum</a>相关的描述</td></tr><tr><td>支付创建时间</td><td>createTime</td><td>是</td><td>Long</td><td>123123121</td><td>使用时间戳(秒级)</td></tr><tr><td>支付成功时间</td><td>payTime</td><td>否</td><td>Long</td><td>123133121</td><td>使用时间戳(秒级)</td></tr><tr><td>支付关闭时间</td><td>closeTime</td><td>否</td><td>Long</td><td>123223121</td><td>使用时间戳(秒级)</td></tr><tr><td>商户扩展参数</td><td>attach</td><td>是</td><td>String</td><td>&quot;{data:1234}&quot;</td><td>回调时会原样返回</td></tr><tr><td>签名</td><td>sign</td><td>是</td><td>String</td><td>072695d112892e382a7093b81e6a52af</td><td>如果在后台系统中开启验签选项后必填</td></tr></tbody></table><h3 id="paychannelresult参数" tabindex="-1">PayChannelResult参数 <a class="header-anchor" href="#paychannelresult参数">¶</a></h3><table><thead><tr><th>字段名<img width="70/"></th><th>变量名</th><th>必传</th><th>类型</th><th>示例值</th><th>描述</th></tr></thead><tbody><tr><td>支付通道</td><td>channel</td><td>是</td><td>String</td><td></td><td>进行支付的通道编码，如微信支付、支付宝支付等。见常量和状态表<a href="/daxpay/guides/other/常量和状态表.html#支付通道-paychannelenum">PayChannelEnum</a>相关的描述</td></tr><tr><td>支付方式</td><td>way</td><td>是</td><td>String</td><td></td><td>进行支付的方式编码，如扫码支付、条码支付等。见常量和状态表<a href="/daxpay/guides/other/常量和状态表.html#支付方式-paywayenum">PayWayEnum</a>相关的描述</td></tr><tr><td>支付金额</td><td>amount</td><td>是</td><td>String</td><td></td><td>支付的金额，单位为<strong>分</strong></td></tr></tbody></table><h2 id="通知示例" tabindex="-1">通知示例 <a class="header-anchor" href="#通知示例">¶</a></h2><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;paymentId&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;1761994643286761472&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;businessNo&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;P10408&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;asyncPay&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;asyncChannel&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;amount&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;payChannels&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;channel&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cash_pay&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;way&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;normal&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;amount&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;status&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;success&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;createTime&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1708927233</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;payTime&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1708927234</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;closeTime&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;attach&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Attach&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;sign&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:  </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;b9e51341dc6c7d69a82d6652f6f2fe49&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="sdk使用说明" tabindex="-1">SDK使用说明 <a class="header-anchor" href="#sdk使用说明">¶</a></h2><blockquote><p>SDK提供回调对象的实体类，可以便于对接收到的通知内容进行反序列和验签，简化消息通知的处理流程。</p></blockquote><ul><li><code>cn.bootx.platform.daxpay.sdk.model.notice.RefundNoticeModel</code> 退款通知类</li><li><code>cn.bootx.platform.daxpay.sdk.model.notice.RefundChannelModel</code> 退款通道信息类</li></ul><h2 id="使用-requestbody注解直接反序列化对象" tabindex="-1">使用<code>@RequestBody</code>注解直接反序列化对象 <a class="header-anchor" href="#使用-requestbody注解直接反序列化对象">¶</a></h2><blockquote><p>直接在Controller层使用<code>@RequestBody</code>注解反序列化对象.,简化手动转换的环节</p></blockquote><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Operation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">summary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;支付消息(对象接收)&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">PostMapping</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/payObject&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pay</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RequestBody</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> PayNoticeModel model){</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    log.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">info</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;接收到支付回调消息: {}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,model);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;SUCCESS&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="验签" tabindex="-1">验签 <a class="header-anchor" href="#验签">¶</a></h3><blockquote><p>将反序列化的对象传入验签方法，即可完成验签。</p></blockquote><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// MD5方式验签</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PaySignUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">verifyMd5Sign</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;123456&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, model.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getSign</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// HmacSha256方式验签</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">PaySignUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">verifyHmacSha256Sign</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;123456&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, model.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getSign</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span></code></pre></div>`,26),h=[n];function e(l,p,k,r,E,o){return i(),s("div",null,h)}const c=t(d,[["render",e]]);export{g as __pageData,c as default};
