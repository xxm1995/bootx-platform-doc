import{_ as a,c as e,o as p,V as i}from"./chunks/framework.cllxpRy7.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"platform/server/service/iam/身份识别与访问管理.md","filePath":"platform/server/service/iam/身份识别与访问管理.md","lastUpdated":1692627846000}'),o={name:"platform/server/service/iam/身份识别与访问管理.md"},t=i('<h2 id="认证管理" tabindex="-1">认证管理 <a class="header-anchor" href="#认证管理">¶</a></h2><h3 id="认证终端" tabindex="-1">认证终端 <a class="header-anchor" href="#认证终端">¶</a></h3><p>认证终端应通常是用来后端管理端、h5手机端，微信小程序端，不同的终端有自己的菜单和权限码，同时也可以绑定不同的登录方式，如果使用未绑定的登录方式进行登录，会提示错误。 用户登录时只能对已关联的终端进行登录，比如微信小程序端的用户就可能无法登陆管理端，所以用户需要在添加时关联相应的认证终端，通常是在编写注册或导入时，赋予用户默认的终端类型。 <img src="https://cdn.nlark.com/yuque/0/2022/png/1098426/1659165626198-7dd7fcdf-b6f7-4aec-94fa-b32dd1866ac5.png#clientId=u7f7ddb08-5ca5-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=927&amp;id=u3f827332&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=1391&amp;originWidth=2560&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=120674&amp;status=done&amp;style=none&amp;taskId=ub0d5dbaa-a615-4ef5-a8f2-4c23e483b31&amp;title=&amp;width=1706.6666666666667" alt="image.png" loading="lazy"></p><h3 id="登录方式" tabindex="-1">登录方式 <a class="header-anchor" href="#登录方式">¶</a></h3><p>比如账号密码登陆、手机验证码登录、开放平台扫码登录等，同时可以对配置一些如密码输错几次后锁定账号、是否显示验证码等选项 <img src="https://cdn.nlark.com/yuque/0/2022/png/1098426/1659165787530-af622484-e031-4b61-96f1-9878ddadeae5.png#clientId=u7f7ddb08-5ca5-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=927&amp;id=u06cccf45&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=1391&amp;originWidth=2560&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=162945&amp;status=done&amp;style=none&amp;taskId=ucfabe57d-80f1-4dc2-9ceb-ac97ed2545d&amp;title=&amp;width=1706.6666666666667" alt="image.png" loading="lazy"></p><h2 id="扩展登录方式" tabindex="-1">扩展登录方式 <a class="header-anchor" href="#扩展登录方式">¶</a></h2><p>我们如果要扩展新的登录方式，通常就是实现<code>AbstractAuthentication</code>抽象认证器认证接口，并注册扫Spring容器中，具体步骤：</p><ol><li>创建一个<code>bean</code>，实现<code>AbstractAuthentication</code>接口或者继承它的，实现和重写对应的方法</li><li>在管理后台<code>登录方式</code>处配置对应的登录方式</li><li>然后在管理后台<code>认证终端</code> 将配置的登录方式分配给要应用的终端上</li><li>前端需要编写相应的代码，最后通过调用<code>login</code> 进行登录</li></ol><blockquote><p>可以参照 下面三块对应的代码 <code>OpenIdAuthentication</code> 具体逻辑实现 <code>ThirdLoginService</code> 三方登录的处理（企微、钉钉、微信等方式） <code>TokenService#login</code> 登录接口</p></blockquote><h2 id="菜单和权限码管理" tabindex="-1">菜单和权限码管理 <a class="header-anchor" href="#菜单和权限码管理">¶</a></h2><p>菜单对应前端的<code>Router路由</code>配置，可以控制前端菜单的显示和配置。 权限码（权限资源）对应的是资源权限，通过配置权限码，前端可以通过权限码来控制对应元素是否进行显示。 菜单和权限与角色进行关联，通过给用户分配角色，可以实现用户与菜单和权限的关联。 <img src="https://cdn.nlark.com/yuque/0/2022/png/1098426/1659167668415-7ff49c93-c6bd-4467-bd74-ca05a119cfbc.png#clientId=u7f7ddb08-5ca5-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=927&amp;id=ubedb7034&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=1391&amp;originWidth=2560&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=190868&amp;status=done&amp;style=none&amp;taskId=u142171dd-974c-49d6-8e12-9541600d81f&amp;title=&amp;width=1706.6666666666667" alt="image.png" loading="lazy"></p><h2 id="访问权限管理" tabindex="-1">访问权限管理 <a class="header-anchor" href="#访问权限管理">¶</a></h2><p>对请求放开权限的校验通常有以下三种方式：</p><ul><li>在<code>.yml</code>中<code>bootx.starter.auth.ignore-urls</code> 配置要忽略鉴权的路径</li><li>通过在请求Controller或相关方法上加入<code>@IgnoreAuth</code>注解来忽略鉴权</li><li>通过配置访问权限管理进行配置</li></ul><p>访问权限管理是用来管理哪些接口需要进行鉴权，以及用户可以访问哪些请求路径，通过后台管理端<code>请求管理</code>中的<code>同步系统访问权限</code>，可以将系统所有的请求同步到数据库中进行管理，可以对每一条请求进行配置</p><p>访问权限与角色进行关联，通过给用户分配角色，可以实现用户与访问权限的关联。 <img src="https://cdn.nlark.com/yuque/0/2022/png/1098426/1659167986075-e8303e8c-3e38-41bf-a9d1-5276ee0e0895.png#clientId=u7f7ddb08-5ca5-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=927&amp;id=u94af3a25&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=1391&amp;originWidth=2560&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=298260&amp;status=done&amp;style=none&amp;taskId=u96b03b5f-c795-4a1b-81da-a6603973848&amp;title=&amp;width=1706.6666666666667" alt="image.png" loading="lazy"></p><h2 id="数据权限配置" tabindex="-1">数据权限配置 <a class="header-anchor" href="#数据权限配置">¶</a></h2><p>控制用户可以查看的数据范围，分为以下级别：</p><ul><li>SELF 只能查看自己的数据</li><li>USER_SCOPE 可以查看指定用户的数据</li><li>DEPT_SCOPE 可以查看指定部门的数据</li><li>DEPT_AND_USER_SCOPE 可以查看指定部门和指定用户的数据</li><li>ALL_SCOPE 可以查询全部数据</li><li>BELONG_DEPT 只能查看自己部门人员的数据</li><li>BELONG_DEPT_AND_SUB 可以查看自己部门及下级部门的数据</li></ul><blockquote><p>一个用户只能分配一种数据权限，不支持拥有多种，如果用户未被分配数据权限，默认是SELF 级别，只能查看自己的数据。</p></blockquote><p>详细使用教程见<code>[数据权限模块](https://www.yuque.com/bootx/bootx-platform/obg1wm)</code><img src="https://cdn.nlark.com/yuque/0/2022/png/1098426/1659168088212-8d84927f-2c70-495b-89f1-dec35cf2f943.png#clientId=u7f7ddb08-5ca5-4&amp;crop=0&amp;crop=0&amp;crop=1&amp;crop=1&amp;from=paste&amp;height=927&amp;id=uda38dbf8&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=1391&amp;originWidth=2560&amp;originalType=binary&amp;ratio=1&amp;rotation=0&amp;showTitle=false&amp;size=177287&amp;status=done&amp;style=none&amp;taskId=ua1a4ef4f-bcd8-4c66-960e-6718450579f&amp;title=&amp;width=1706.6666666666667" alt="image.png" loading="lazy"></p><blockquote><p>系统超级管理员（非通过界面角色分配的管理员角色的用户，指的是系统初始化时导入的管理员角色），不受权限配置的控制，可以通过配置文件来停用超级管理员用户，正式环境推荐关闭超级管理员</p></blockquote>',22),c=[t];function m(d,n,r,l,s,h){return p(),e("div",null,c)}const b=a(o,[["render",m]]);export{f as __pageData,b as default};
