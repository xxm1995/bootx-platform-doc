import{_ as s,c as i,o as a,V as e}from"./chunks/framework.TiLr8DIm.js";const g=JSON.parse('{"title":"常见问题","description":"","frontmatter":{},"headers":[],"relativePath":"platform/overview/faq/常见问题.md","filePath":"platform/overview/faq/常见问题.md","lastUpdated":1692349911000}'),l={name:"platform/overview/faq/常见问题.md"},t=e(`<h1 id="常见问题" tabindex="-1">常见问题 <a class="header-anchor" href="#常见问题">¶</a></h1><h2 id="通用问题" tabindex="-1">通用问题 <a class="header-anchor" href="#通用问题">¶</a></h2><ol><li>开始新项目时，如何去掉不需要的模块</li><li>数据表大字段，查询时如何给排除</li><li>docker-compose部署,使用外置配置文件</li><li>异常时返回链路追踪id的使用 对后端请求出现异常时，后端的返回的响应头会携带<code>TraceId</code>对象，可以在控制台或者请求的响应头中看到，通过<code>TraceId</code>可以在ELK、plumelog、控制台、日志文件查询出此次请求的链路情况</li><li>如何配置不登录也可以直接访问的菜单路由 在<code>router.config.js</code>中添加路由时，在<code>mate</code>中添加<code>ignoreLogin: true</code>属性<div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;cs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;cs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: { </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;ce&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ignoreLogin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  component</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;@/views/modules/chart/cs&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></li><li>Redis 多实例情况下，会收到多个过期事件 Redis提供的消息队列和过期事件通知，无法保证可靠行，需要自行进行兜底，如过期事件，在用在订单撤销的时候，需要另写定时任务进行兜底，</li><li>同时在取消订单时，也需要判断订单的状态。如需要高可靠的，可以选用专业消息中间件和对应的延时队列</li><li>自定义mybatis的mapper.xml后，运行时提示找不到文件及方法 需要自定义的mapper.xml在<code>resources/mapper</code>的子孙目录下，同时自定义mapper.xml必须以<code>mapper.xml</code>，否则会扫描不到文件，也可以根据自己需要更改<code>mybatis-plsu</code>的配置项目</li><li>未登录时也可以请求接口，未被拦截 通常是因为在dev模式下，查看<code>bootx.starter.auth.ignore-urls</code> 下接口是否被放行了</li><li>时间日期插件出现汉化不全 查看是否是更新了<code>moment</code> 的依赖版本，需要设置为<code>^2.21.0</code>，与<code>antdv</code> 版本对应</li><li>添加数据库监控 将<code>hikari</code>数据连接池更换为</li><li>启动时控制台报<code>Waiting for changelog lock....</code>错误 原因是<code>Flowable锁表了</code>，解决方式是：<code>flw_ev_databasechangeloglock</code>中删除锁数据</li><li>使用<code>lombok</code>的<code>AllArgsConstructor</code>、<code>RequiredArgsConstructor</code>时，加在字段的注解没有复制到构造参数上</li></ol><h2 id="后端常见问题" tabindex="-1">后端常见问题 <a class="header-anchor" href="#后端常见问题">¶</a></h2><h2 id="前端常见问题" tabindex="-1">前端常见问题 <a class="header-anchor" href="#前端常见问题">¶</a></h2>`,5),n=[t];function h(d,o,p,r,c,k){return a(),i("div",null,n)}const m=s(l,[["render",h]]);export{g as __pageData,m as default};
