import{_ as a,c as e,o as t,V as r}from"./chunks/framework.OTU5OxHT.js";const f=JSON.parse('{"title":"验证码生成","description":"","frontmatter":{},"headers":[],"relativePath":"platform/server/service/baseapi/验证码管理.md","filePath":"platform/server/service/baseapi/验证码管理.md","lastUpdated":1692538214000}'),c={name:"platform/server/service/baseapi/验证码管理.md"},s=r('<h1 id="验证码生成" tabindex="-1">验证码生成 <a class="header-anchor" href="#验证码生成">¶</a></h1><p>生成算数或者文本验证码，使用的是<code>easy-captcha</code>类库 <a href="https://gitee.com/ele-admin/EasyCaptcha" target="_blank" rel="noreferrer">GIT地址</a> 。 如果要使用验证码相关的功能，可以倒数对应的服务类<code>cn.bootx.platform.baseapi.core.captcha.service.CaptchaService</code>，然后使用相应的方法即可。</p><h2 id="图片验证码" tabindex="-1">图片验证码 <a class="header-anchor" href="#图片验证码">¶</a></h2><ul><li>imgCaptcha 获取图片验证码</li><li>validateImgCaptcha 校验图片验证码</li><li>deleteImgCaptcha 将图片验证码设置为失效</li></ul><p><strong>CaptchaDataResult返回值</strong></p><table><thead><tr><th>字段</th><th>含义</th></tr></thead><tbody><tr><td>captchaKey</td><td>验证码标识KEY</td></tr><tr><td>captchaData</td><td>验证码base64数据</td></tr></tbody></table><h2 id="短信验证码" tabindex="-1">短信验证码 <a class="header-anchor" href="#短信验证码">¶</a></h2><blockquote><p>默认只是获取了短信验证码的数据，并不会真实发送短信，具体发送短信的操作需要我们进行开发，可以使用项目中已经集成了的SMS4J框架进行发送</p></blockquote><ul><li>sendSmsCaptcha 发送手机验证码</li><li>existsSmsCaptcha 验证手机发送的验证码是否还在有效时间内</li><li>validateSmsCaptcha 校验手机验证码</li><li>deleteSmsCaptcha 将手机验证码验证码设置为失效</li></ul>',9),i=[s];function l(d,o,h,p,_,n){return t(),e("div",null,i)}const b=a(c,[["render",l]]);export{f as __pageData,b as default};
