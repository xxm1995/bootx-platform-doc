import{_ as e,c as a,o,V as t}from"./chunks/framework.cllxpRy7.js";const m=JSON.parse('{"title":"数据翻译","description":"","frontmatter":{},"headers":[],"relativePath":"platform/server/common/数据翻译.md","filePath":"platform/server/common/数据翻译.md","lastUpdated":1692349911000}'),c={name:"platform/server/common/数据翻译.md"},l=t('<h1 id="数据翻译" tabindex="-1">数据翻译 <a class="header-anchor" href="#数据翻译">¶</a></h1><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>开发中，未定版本，可能随时变动，请以官方文档为准</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>主要用在<code>Controller</code>返回数据时需要对返回对象中的字段进行翻译转换的场景，支持字典值正反向翻译，数据表数据翻译，自定义处理器方法翻译三种。</p></div><h2 id="使用说明" tabindex="-1">使用说明 <a class="header-anchor" href="#使用说明">¶</a></h2><h3 id="translationresult" tabindex="-1">TranslationResult <a class="header-anchor" href="#translationresult">¶</a></h3><blockquote><p>字典翻译标识注解，可以标注在字段和方法上，标注在字段上时，字段通常是对象类型或者对象集合，在翻译的时候会对这个字段进行递归翻译，将对象内的字段进行处理</p></blockquote><p><strong>参数</strong></p><ul><li><code>enable</code> 是否启用翻译</li><li><code>convertType</code> 翻译类型，将返回结果转换成什么类型，只可以用在方法上, 在字段上标注不发生效果 <ul><li><code>OBJECT</code> 将目标对象转换成MAP, 限定只能使用在类似 ResResult 容器情况下, 可以处理翻译值前后类型不一致问题, 但会导致字段元信息的丢失, 导致后续的处理出问题</li><li><code>MAP</code> 不对目标对象的类型进行修改, 只对字典值进行翻译, 但遇到注解标注的字段出现字典项code与name类型不一致, 会进行忽略</li></ul></li></ul><h3 id="translate" tabindex="-1">Translate <a class="header-anchor" href="#translate">¶</a></h3><blockquote><p>用于标注在字段上，对字段的翻译要求进行配置</p></blockquote><p><strong>参数</strong></p><ul><li><code>type</code> 翻译类型， <ul><li><code>DICT</code> 字典</li><li><code>TABLE</code> 数据表</li></ul></li><li><code>dicCode</code> 字典编码，翻译类型为字典时可用</li><li><code>source</code> 来源字段 默认为自身，本字段的值通过翻译哪个字段进行获得</li><li><code>target</code> 目标字段 默认为自身，将本字段翻译的值赋予哪个字段</li></ul><h3 id="示例" tabindex="-1">示例 <a class="header-anchor" href="#示例">¶</a></h3><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"></span></code></pre></div>',14),s=[l];function d(i,r,n,p,h,u){return o(),a("div",null,s)}const b=e(c,[["render",d]]);export{m as __pageData,b as default};
