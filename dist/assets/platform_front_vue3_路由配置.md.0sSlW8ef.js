import{_ as a,c as s,o as e,V as i}from"./chunks/framework.OTU5OxHT.js";const u=JSON.parse('{"title":"路由配置","description":"","frontmatter":{},"headers":[],"relativePath":"platform/front/vue3/路由配置.md","filePath":"platform/front/vue3/路由配置.md","lastUpdated":1692782764000}'),t={name:"platform/front/vue3/路由配置.md"},h=i(`<h1 id="路由配置" tabindex="-1">路由配置 <a class="header-anchor" href="#路由配置">¶</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>当前系统路由配置分为两种，分别是后端配置和前端配置，后端通过菜单管理进行配置，前端在<code>src/router/routes/index.ts</code>文件夹下进行配置， 前端配置的路由通常用于未登录可访问的情况，后端配置菜单的需要登录后才能获取，所以只能用户用户已登录的情况。</p></div><h2 id="后端配置" tabindex="-1">后端配置 <a class="header-anchor" href="#后端配置">¶</a></h2><blockquote><p>见身份识别与访问管理中的<a href="/platform/server/service/iam/菜单管理.html">菜单管理模块</a>，对后台进行路由配置有着详细的介绍。</p></blockquote><h2 id="前端配置" tabindex="-1">前端配置 <a class="header-anchor" href="#前端配置">¶</a></h2><p>路由配置的类型是<code>AppRouteRecordRaw</code>，在<code>src/router/routes/index.ts</code>文件中，构造并暴露出<code>basicRoutes</code>对象，来提供给路由菜单构造工具类使用， 实现前端路由的生成。</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 无需鉴权的基本路由</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> basicRoutes</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [LoginRoute, RootRoute, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">mainOutRoutes, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">REDIRECT_ROUTE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">PAGE_NOT_FOUND_ROUTE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span></code></pre></div><h3 id="配置参数" tabindex="-1">配置参数 <a class="header-anchor" href="#配置参数">¶</a></h3><h2 id="特殊类型路由" tabindex="-1">特殊类型路由 <a class="header-anchor" href="#特殊类型路由">¶</a></h2><h3 id="打开外部链接" tabindex="-1">打开外部链接 <a class="header-anchor" href="#打开外部链接">¶</a></h3><h3 id="内部打开外部页面-iframe" tabindex="-1">内部打开外部页面(Iframe) <a class="header-anchor" href="#内部打开外部页面-iframe">¶</a></h3><h3 id="独立展示内部页" tabindex="-1">独立展示内部页 <a class="header-anchor" href="#独立展示内部页">¶</a></h3>`,12),r=[h];function n(o,d,c,p,l,k){return e(),s("div",null,r)}const f=a(t,[["render",n]]);export{u as __pageData,f as default};
