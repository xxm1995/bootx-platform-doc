import{_ as s,c as i,o as a,V as n}from"./chunks/framework.OTU5OxHT.js";const g=JSON.parse('{"title":"项目启动","description":"","frontmatter":{},"headers":[],"relativePath":"daxpay/guides/develop/项目启动.md","filePath":"daxpay/guides/develop/项目启动.md","lastUpdated":1707839936000}'),h={name:"daxpay/guides/develop/项目启动.md"},p=n(`<h1 id="项目启动" tabindex="-1">项目启动 <a class="header-anchor" href="#项目启动">¶</a></h1><h2 id="开发工具参考" tabindex="-1">开发工具参考 <a class="header-anchor" href="#开发工具参考">¶</a></h2><h3 id="后端环境" tabindex="-1">后端环境 <a class="header-anchor" href="#后端环境">¶</a></h3><table><thead><tr><th>名称</th><th>介绍</th><th>参考版本</th></tr></thead><tbody><tr><td>JDK</td><td>Java运行环境</td><td>1.8/11，推荐使用1.8</td></tr><tr><td>Maven</td><td>项目构建工具</td><td>推荐版本3.6.x及以上</td></tr><tr><td>IDE</td><td>集成开发工具</td><td>IntelliJ IDEA</td></tr><tr><td>MySQL</td><td>数据库</td><td>5.7.X和8.X，推荐使用5.7系列版本，8.X需要设置为大小写不敏感</td></tr><tr><td>Redis</td><td>缓存中间件</td><td>推荐使用5.0及以上版本</td></tr></tbody></table><h3 id="前端环境" tabindex="-1">前端环境 <a class="header-anchor" href="#前端环境">¶</a></h3><table><thead><tr><th>环境</th><th>版本</th><th>备注</th></tr></thead><tbody><tr><td>Node</td><td>16+</td><td>推荐18+，16可能会出现部分依赖组件不支持的情况</td></tr><tr><td>pnpm</td><td>7.27+</td><td>包管理工具</td></tr></tbody></table><h2 id="基础环境搭建" tabindex="-1">基础环境搭建 <a class="header-anchor" href="#基础环境搭建">¶</a></h2><h3 id="数据库" tabindex="-1">数据库 <a class="header-anchor" href="#数据库">¶</a></h3><blockquote><p>启动或者找一台可以使用的MySQL实例，同时在后端项目中<code>_config/sql</code>目录下找到<code>dax-pay.sql</code>数据库脚本文件。</p></blockquote><ul><li><p>在数据库中新建一个<code>dax-pay</code>的<code>schema</code>空间，编码集选择<code>utf8mb4</code>。</p></li><li><p>将<code>dax-pay.sql</code>数据库脚本文件导入进去。</p></li></ul><h3 id="redis" tabindex="-1">Redis <a class="header-anchor" href="#redis">¶</a></h3><blockquote><p>启动一个Redis实例，记录可进行连接的各项信息，以备后续使用。</p></blockquote><p><strong>不需要进行额外操作</strong></p><h2 id="项目下载" tabindex="-1">项目下载 <a class="header-anchor" href="#项目下载">¶</a></h2><blockquote><p>后端下载</p></blockquote><p>后端项目地址: <a href="https://gitee.com/bootx/dax-pay" target="_blank" rel="noreferrer">https://gitee.com/bootx/dax-pay</a> ，</p><p>执行命令：<code>git clone https://gitee.com/bootx/dax-pay-ui</code></p><blockquote><p>前端下载</p></blockquote><p>后端项目地址: <a href="https://gitee.com/bootx/dax-pay-ui" target="_blank" rel="noreferrer">https://gitee.com/bootx/dax-pay-ui</a> ，</p><p>执行命令：<code>git clone https://gitee.com/bootx/dax-pay-ui.git</code></p><h2 id="项目启动-后端" tabindex="-1">项目启动（后端） <a class="header-anchor" href="#项目启动-后端">¶</a></h2><ol><li>将项目导入到<code>IDEA</code>中，等待依赖下载完毕</li><li>找到<code>daxpay-single</code>下的<code>daxpay-single-start</code>模块，打开配置文件，将其中的<code>数据库连接地址</code>和<code>Redis缓存连接地址</code>更换为真实的地址。</li><li>打开本模块的<code>DaxpaySingleStart</code>类文件并运行，启动项目，当控制台打印下列内容说明启动成功。</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">----------------------------------------------------------</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	应用</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;dax-pay-single&#39;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 运行成功! </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	Swagger文档:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 		http://192.168.1.12:9000/doc.html</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	 </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">----------------------------------------------------------</span></span></code></pre></div><h2 id="项目启动-前端" tabindex="-1">项目启动（前端） <a class="header-anchor" href="#项目启动-前端">¶</a></h2><p>使用<code>Vs Code</code>或<code>Webstorm</code>打开项目，然后执行以下命令启动项目：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 安装项目依赖</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 启动项目</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pnpm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run dev</span></span></code></pre></div><p>当控制台出现下列内容时说明启动成功：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  VITE</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> v4.5.1  ready in </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8797</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ms</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ➜</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  Local:   https://localhost:3100/                                                                         </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:56:35</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ➜</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  Network: https://192.168.1.12:3100/                                                                      </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:56:35</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ➜</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  Network: https://192.168.196.167:3100/                                                                   </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:56:35</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  ➜</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  press h to show help                                                                                     </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">13</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:56:35</span></span></code></pre></div><p>启动成功后，点击访问即可，默认的账号密码为：<code>bootx</code>/<code>123456</code></p><h2 id="本地调试示例" tabindex="-1">本地调试示例 <a class="header-anchor" href="#本地调试示例">¶</a></h2><div class="tip custom-block"><p class="custom-block-title">提示</p><p>因为支付系统会涉及到一些三方支付网关的交互，以及例如微信授权域名、jsapi安全域名的限制，所以本地调试时，对一些回调和手机端上的操作，需要做一些特殊处理。 假定我们拥有一个域名<code>www.daxpay.com</code>，并且该域名已经备案，下面就是举一个开发时进行调试的例子。</p></div><h3 id="准备内网穿透" tabindex="-1">准备内网穿透 <a class="header-anchor" href="#准备内网穿透">¶</a></h3><blockquote><p>因为开发时，需要接收各种回调请求，以及手机端开发时，需要能够从外网进行访问，通常我们需要使用内网穿透工具，比如<code>ngrok</code>、<code>frp</code>等，具体可以自行搜索相关资料。</p></blockquote><h3 id="nginx配置" tabindex="-1">Nginx配置 <a class="header-anchor" href="#nginx配置">¶</a></h3><blockquote><p>在本机安装Nginx，用来转发内网穿透的进来的请求，主要对服务端和手机端进行分发，PC端不映射到外网也不影响开发，所以不做处理。<code>nginx.conf</code>配置如下：</p></blockquote><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">worker_processes</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">events</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    worker_connections</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  1024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">http</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       mime.types</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    default_type</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  application/octet-stream</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    sendfile</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    keepalive_timeout</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  65</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        listen</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">       9999</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 这个是你用来内网穿透的地址</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        server_name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  www.daxpay.cn</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 手机移动端网站， 用于手机进行调试时使用</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        location</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ^~/h5 {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">              proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Host </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$host;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">              proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> X-Real-IP </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$remote_addr;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">              proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> REMOTE-HOST </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$remote_addr;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">              proxy_buffering</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">              proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Upgrade </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$http_upgrade;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">              proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Connection &quot;upgrade&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              # H5端在本机的访问路径上</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">              proxy_pass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  http://localhost:9100/h5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        # 将后端接口以 /server 开头的方式映射出去, 供回调、H5端调用接口时进行使用</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        location</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /server/ {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">             proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Host </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$host;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">              proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> X-Real-IP </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$remote_addr;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">              proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> REMOTE-HOST </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$remote_addr;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">              proxy_buffering</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">              proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Upgrade </span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$http_upgrade;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">              proxy_set_header</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Connection &quot;upgrade&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">              # 后端在本机的访问路径上</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">              proxy_pass</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  http://localhost:9000/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        error_page</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   500</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 502</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 503</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 504</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  /50x.html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        location</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> = /50x.html { </span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="h5前端配置和启动" tabindex="-1">H5前端配置和启动 <a class="header-anchor" href="#h5前端配置和启动">¶</a></h3><blockquote><p>PC端直接启动就可以，不需要进行额外的配置，H5端需要配置 <code>网站根目录</code> 为 <code>/h5</code> 和 <code>接口前缀</code> 为 <code>/server</code>，从而让H5移动端在外网被访问时， 可以正常被访问以及能够正常调用后端接口。</p></blockquote><div class="language-properties vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 端口号</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VITE_PORT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 9100</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 网站根目录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VITE_PUBLIC_PATH</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = /h5</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 是否删除console</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VITE_DROP_CONSOLE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = true</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 跨域代理，可以配置多个，请注意不要换行</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> VITE_PROXY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=[[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;/server&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://localhost:9000&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># API 接口地址</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 如果没有跨域问题，直接在这里配置即可</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VITE_GLOB_API_URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 图片上传地址</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VITE_GLOB_UPLOAD_URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 图片前缀地址</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VITE_GLOB_IMG_URL</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> =</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 接口前缀</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">VITE_GLOB_API_URL_PREFIX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = /server</span></span></code></pre></div><h2 id="pc端前端" tabindex="-1">PC端前端 <a class="header-anchor" href="#pc端前端">¶</a></h2><blockquote><p>PC端不映射到外网也不影响开发，不需要进行特殊的处理，所以以默认的方式启动即可。</p></blockquote><h2 id="服务端" tabindex="-1">服务端 <a class="header-anchor" href="#服务端">¶</a></h2><blockquote><p>外网请求到服务端的数据经过Nginx进行转发，所以不需要进行特殊的配置，所以以默认的方式启动即可。</p></blockquote>`,43),t=[p];function l(e,k,d,r,o,c){return a(),i("div",null,t)}const E=s(h,[["render",l]]);export{g as __pageData,E as default};
