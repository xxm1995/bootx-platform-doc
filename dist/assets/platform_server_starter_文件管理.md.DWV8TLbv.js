import{_ as e,c as t,o as a,a8 as r}from"./chunks/framework.riYNsadV.js";const m=JSON.parse('{"title":"文件管理","description":"","frontmatter":{},"headers":[],"relativePath":"platform/server/starter/文件管理.md","filePath":"platform/server/starter/文件管理.md","lastUpdated":1707230612000}'),o={name:"platform/server/starter/文件管理.md"},s=r('<h1 id="文件管理" tabindex="-1">文件管理 <a class="header-anchor" href="#文件管理">¶</a></h1><div class="tip custom-block"><p class="custom-block-title">提示</p><p>文件管理基于 <code>x-file-storage</code>实现，具体使用方法可以查看相关文档: <a href="https://x-file-storage.xuyanwu.cn/" target="_blank" rel="noreferrer">x-file-storage文档</a></p></div><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用">¶</a></h2><blockquote><p>文件访问没有使用<code>x-file-storage</code>提供的方式，而是使用自定义实现的后端转发方式。通过拼接文件服务地址和文件地址进行访问，如果在配置文件、系统参数都配置的文件服务地址，系统中的读取顺序 系统参数 &gt; 配置文件 &gt; 默认配置(<a href="http://127.0.0.1:9999" target="_blank" rel="noreferrer">http://127.0.0.1:9999</a>)</p></blockquote><h3 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置">¶</a></h3>',5),c=[s];function _(l,d,n,i,h,p){return a(),t("div",null,c)}const u=e(o,[["render",_]]);export{m as __pageData,u as default};
