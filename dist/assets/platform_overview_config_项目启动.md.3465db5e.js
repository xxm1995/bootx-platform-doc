import{_ as s,o as a,c as o,X as n}from"./chunks/framework.6909765d.js";const D=JSON.parse('{"title":"项目启动","description":"","frontmatter":{},"headers":[],"relativePath":"platform/overview/config/项目启动.md","filePath":"platform/overview/config/项目启动.md"}'),e={name:"platform/overview/config/项目启动.md"},t=n(`<h1 id="项目启动" tabindex="-1">项目启动 <a class="header-anchor" href="#项目启动">¶</a></h1><h2 id="后端启动" tabindex="-1">后端启动 <a class="header-anchor" href="#后端启动">¶</a></h2><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>运行时会有<code>RabbitMQ</code>和<code>MongoDB</code>相关的报错，者是因为我们以最简方式运行的系统，没有配置它们的连接地址，但是不影响项目的正常使用，后面可以根据实际的情况， 补上这些配置，或把这些用不到的功能做删减。</p></div><h3 id="环境准备-最低依赖" tabindex="-1">环境准备(最低依赖) <a class="header-anchor" href="#环境准备-最低依赖">¶</a></h3><table><thead><tr><th>环境</th><th>版本</th><th>备注</th></tr></thead><tbody><tr><td>JDK</td><td>8/11</td><td>基于8编写，11运行正常</td></tr><tr><td>MySQL</td><td>5.7.8 +</td><td>未对MySQL8进行测试，需要设置为大小写不敏感</td></tr><tr><td>Redis</td><td>3.0+/5.0+</td><td>3.x版本会导致一些依赖高级特性的功能无法使用</td></tr></tbody></table><h3 id="启动过程" tabindex="-1">启动过程 <a class="header-anchor" href="#启动过程">¶</a></h3><ol><li><code>git clone https://gitee.com/bootx/bootx-platform.git</code> 克隆后端代码到本地，然后使用<code>IDEA</code>打开，等待下载项目中<code>Maven</code>的依赖</li><li>在提前准备的<code>MySQL</code>服务上创建稍后将要使用的空白库，项目默认配置的库名称为<code>bootx-platform</code></li><li>打开刚下载项目里<code>bootx-start</code>模块下的<code>application-dev.yml</code>文件，将里面的<code>MySQL</code>和<code>Redis</code>替换成我们预先准备好的连接地址</li><li>初始化数据库，有下列两种方式进行初始化： <ol><li>手动导入数据库脚本，项目<code>_config/sql</code> 文件夹找到数据库sql文件<code>bootx-platform.sql</code>，然后执行导入到刚才准备的数据库中， 同时将<code>application-dev.yml</code>配置文件文件中的<code>spring.flyway.enabled</code>的配置设置为<code>false</code></li><li>无需手动导入数据库脚本，项目启动时会自动初始化数据库，只需要检查<code>spring.flyway.enabled</code>选项是否为<code>true</code></li></ol></li><li>运行项目里<code>bootx-start</code>模块下<code>cn.bootx.start.BootxApplication</code>启动类，启动系统，执行完成后，会显示下面的界面，说明启动成功</li></ol><div class="language-log"><button title="Copy Code" class="copy"></button><span class="lang">log</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">2022-12-25 21:07:40596| INFO [] main - cn.bootx.start.BootxApplication| </span></span>
<span class="line"><span style="color:#A6ACCD;">   ----------------------------------------------------------</span></span>
<span class="line"><span style="color:#A6ACCD;">       应用 &#39;bootx-platform&#39; 运行成功! </span></span>
<span class="line"><span style="color:#A6ACCD;">       Swagger文档: 		http://ip:9999/doc.html</span></span>
<span class="line"><span style="color:#A6ACCD;">   ----------------------------------------------------------</span></span></code></pre></div><blockquote><p>运行时控制台会有至少两次异常抛出，分别是<code>RabbitMQ</code>和<code>MongoDB</code>相关的报错，但不影响系统的运行</p></blockquote><div class="language-log"><button title="Copy Code" class="copy"></button><span class="lang">log</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">2022-12-25 21:07:23255| INFO [] cluster-ClusterId{value=&#39;63a84b09e012927f87783735&#39;, description=&#39;null&#39;}-127.0.0.1:27017 - org.mongodb.driver.cluster| Exception in monitor thread while connecting to server 127.0.0.1:27017</span></span>
<span class="line"><span style="color:#A6ACCD;">com.mongodb.MongoSocketOpenException: Exception opening socket</span></span>
<span class="line"><span style="color:#A6ACCD;">	...</span></span>
<span class="line"><span style="color:#A6ACCD;">Caused by: java.net.ConnectException: Connection refused: connect</span></span>
<span class="line"><span style="color:#A6ACCD;">	...</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span></span>
<span class="line"><span style="color:#A6ACCD;">2022-12-25 21:07:43890| WARN [] RMI TCP Connection(3)-192.168.196.167 - o.s.b.a.amqp.RabbitHealthIndicator| Rabbit health check failed</span></span>
<span class="line"><span style="color:#A6ACCD;">org.springframework.amqp.AmqpConnectException: java.net.ConnectException: Connection refused: connect</span></span>
<span class="line"><span style="color:#A6ACCD;">	...</span></span>
<span class="line"><span style="color:#A6ACCD;">Caused by: java.net.ConnectException: Connection refused: connect</span></span>
<span class="line"><span style="color:#A6ACCD;">	...</span></span></code></pre></div><h2 id="前端启动-vue3" tabindex="-1">前端启动（Vue3） <a class="header-anchor" href="#前端启动-vue3">¶</a></h2><h3 id="环境准备" tabindex="-1">环境准备 <a class="header-anchor" href="#环境准备">¶</a></h3><table><thead><tr><th>环境</th><th>版本</th><th>备注</th></tr></thead><tbody><tr><td>Node</td><td>16+</td><td>推荐使用16或者18</td></tr><tr><td>pnpm</td><td>7.27+</td><td>包管理工具(默认使用)</td></tr><tr><td>yarn</td><td>v1.22+</td><td>包管理工具</td></tr></tbody></table><h3 id="启动过程-1" tabindex="-1">启动过程 <a class="header-anchor" href="#启动过程-1">¶</a></h3><ol><li><code>git clone https://gitee.com/bootx/bootx-platform-vue3.git</code> 克隆后端代码到本地，然后使用<code>Webstorm</code>或者<code>VS Code</code>打开</li><li>执行<code>pnpm install</code>命令安装依赖</li><li>打开<code>.env.development</code>文件，修改运行时请求的地址为实际运行后端的地址（<code>VITE_PROXY</code>配置项中<code>/api</code>对应的后端地址）<div class="language-properties"><button title="Copy Code" class="copy"></button><span class="lang">properties</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 是否打开mock</span></span>
<span class="line"><span style="color:#F07178;">VITE_USE_MOCK</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">true</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 发布路径</span></span>
<span class="line"><span style="color:#F07178;">VITE_PUBLIC_PATH</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">/</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 跨域代理，您可以配置多个 ,请注意，没有换行符</span></span>
<span class="line"><span style="color:#F07178;">VITE_PROXY</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">[[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/api</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:9999</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">],[</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">/upload</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://localhost:9999/file/upload</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]]</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 控制台不输出console</span></span>
<span class="line"><span style="color:#F07178;">VITE_DROP_CONSOLE</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">false</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 接口地址</span></span>
<span class="line"><span style="color:#F07178;">VITE_GLOB_API_URL</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">/api</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 文件上传地址</span></span>
<span class="line"><span style="color:#F07178;">VITE_GLOB_UPLOAD_URL</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">/upload</span></span>
<span class="line"><span style="color:#676E95;font-style:italic;"># 接口前缀</span></span>
<span class="line"><span style="color:#F07178;">VITE_GLOB_API_URL_PREFIX</span><span style="color:#89DDFF;">=</span></span></code></pre></div></li><li>执行<code>pnpm run dev</code>命令启动项目，默认的端口为<code>3100</code>，启动成功后控制台会打印出访问的地址</li><li>点击访问地址打开页面，默认账号密码为 xxm/123456</li></ol><blockquote><p>受限于<code>vben admin</code>脚手架，首次打开速度会比较缓慢，大约需要35-100秒，并不是系统卡死了</p></blockquote>`,16),l=[t];function c(p,d,i,r,y,h){return a(),o("div",null,l)}const A=s(e,[["render",c]]);export{D as __pageData,A as default};
